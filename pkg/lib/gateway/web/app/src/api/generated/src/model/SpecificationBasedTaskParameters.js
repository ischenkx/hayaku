/**
 * Kantoku API
 * Create and execute distributed workflows
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SpecificationBasedTaskParameters model module.
 * @module model/SpecificationBasedTaskParameters
 * @version 1.0.0
 */
class SpecificationBasedTaskParameters {
    /**
     * Constructs a new <code>SpecificationBasedTaskParameters</code>.
     * @alias module:model/SpecificationBasedTaskParameters
     * @param parameters {Array.<String>} 
     * @param specification {String} 
     * @param info {Object} 
     */
    constructor(parameters, specification, info) { 
        
        SpecificationBasedTaskParameters.initialize(this, parameters, specification, info);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, parameters, specification, info) { 
        obj['parameters'] = parameters;
        obj['specification'] = specification;
        obj['info'] = info;
    }

    /**
     * Constructs a <code>SpecificationBasedTaskParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SpecificationBasedTaskParameters} obj Optional instance to populate.
     * @return {module:model/SpecificationBasedTaskParameters} The populated <code>SpecificationBasedTaskParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SpecificationBasedTaskParameters();

            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], ['String']);
            }
            if (data.hasOwnProperty('specification')) {
                obj['specification'] = ApiClient.convertToType(data['specification'], 'String');
            }
            if (data.hasOwnProperty('info')) {
                obj['info'] = ApiClient.convertToType(data['info'], Object);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<String>} parameters
 */
SpecificationBasedTaskParameters.prototype['parameters'] = undefined;

/**
 * @member {String} specification
 */
SpecificationBasedTaskParameters.prototype['specification'] = undefined;

/**
 * @member {Object} info
 */
SpecificationBasedTaskParameters.prototype['info'] = undefined;






export default SpecificationBasedTaskParameters;

