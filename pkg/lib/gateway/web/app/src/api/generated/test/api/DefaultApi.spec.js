/**
 * Kantoku API
 * Create and execute distributed workflows
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KantokuApi);
  }
}(this, function(expect, KantokuApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KantokuApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('resourcesAllocatePost', function() {
      it('should call resourcesAllocatePost successfully', function(done) {
        //uncomment below and update the code to test resourcesAllocatePost
        //instance.resourcesAllocatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesDeallocatePost', function() {
      it('should call resourcesDeallocatePost successfully', function(done) {
        //uncomment below and update the code to test resourcesDeallocatePost
        //instance.resourcesDeallocatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesInitializePost', function() {
      it('should call resourcesInitializePost successfully', function(done) {
        //uncomment below and update the code to test resourcesInitializePost
        //instance.resourcesInitializePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesLoadPost', function() {
      it('should call resourcesLoadPost successfully', function(done) {
        //uncomment below and update the code to test resourcesLoadPost
        //instance.resourcesLoadPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksCountPost', function() {
      it('should call tasksCountPost successfully', function(done) {
        //uncomment below and update the code to test tasksCountPost
        //instance.tasksCountPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksFilterPost', function() {
      it('should call tasksFilterPost successfully', function(done) {
        //uncomment below and update the code to test tasksFilterPost
        //instance.tasksFilterPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksLoadPost', function() {
      it('should call tasksLoadPost successfully', function(done) {
        //uncomment below and update the code to test tasksLoadPost
        //instance.tasksLoadPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksSpawnFromSpecPost', function() {
      it('should call tasksSpawnFromSpecPost successfully', function(done) {
        //uncomment below and update the code to test tasksSpawnFromSpecPost
        //instance.tasksSpawnFromSpecPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksSpawnPost', function() {
      it('should call tasksSpawnPost successfully', function(done) {
        //uncomment below and update the code to test tasksSpawnPost
        //instance.tasksSpawnPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksSpecificationsCreatePost', function() {
      it('should call tasksSpecificationsCreatePost successfully', function(done) {
        //uncomment below and update the code to test tasksSpecificationsCreatePost
        //instance.tasksSpecificationsCreatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksSpecificationsGetAllPost', function() {
      it('should call tasksSpecificationsGetAllPost successfully', function(done) {
        //uncomment below and update the code to test tasksSpecificationsGetAllPost
        //instance.tasksSpecificationsGetAllPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksSpecificationsGetPost', function() {
      it('should call tasksSpecificationsGetPost successfully', function(done) {
        //uncomment below and update the code to test tasksSpecificationsGetPost
        //instance.tasksSpecificationsGetPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksSpecificationsRemovePost', function() {
      it('should call tasksSpecificationsRemovePost successfully', function(done) {
        //uncomment below and update the code to test tasksSpecificationsRemovePost
        //instance.tasksSpecificationsRemovePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksSpecificationsTypesCreatePost', function() {
      it('should call tasksSpecificationsTypesCreatePost successfully', function(done) {
        //uncomment below and update the code to test tasksSpecificationsTypesCreatePost
        //instance.tasksSpecificationsTypesCreatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksSpecificationsTypesGetAllPost', function() {
      it('should call tasksSpecificationsTypesGetAllPost successfully', function(done) {
        //uncomment below and update the code to test tasksSpecificationsTypesGetAllPost
        //instance.tasksSpecificationsTypesGetAllPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksSpecificationsTypesGetPost', function() {
      it('should call tasksSpecificationsTypesGetPost successfully', function(done) {
        //uncomment below and update the code to test tasksSpecificationsTypesGetPost
        //instance.tasksSpecificationsTypesGetPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksSpecificationsTypesRemovePost', function() {
      it('should call tasksSpecificationsTypesRemovePost successfully', function(done) {
        //uncomment below and update the code to test tasksSpecificationsTypesRemovePost
        //instance.tasksSpecificationsTypesRemovePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tasksUpdatePost', function() {
      it('should call tasksUpdatePost successfully', function(done) {
        //uncomment below and update the code to test tasksUpdatePost
        //instance.tasksUpdatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
